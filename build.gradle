import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
    id 'java-library'
    id 'io.quarkus' version '3.6.0'
    id 'org.openapi.generator' version '7.2.0'
}

group = 'org.crolopez'
version = '1.0-SNAPSHOT'
description = 'Bot to avoid the time you spend worrying about having or not having a place to go to an office you don\'t want to go to'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}


sourceSets {
    main {
        java.srcDirs += 'build/generated/src/main/java'
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation enforcedPlatform('io.quarkus:quarkus-bom:3.6.0')

    implementation 'io.quarkus:quarkus-amazon-lambda'
    implementation 'io.quarkus:quarkus-rest-client'
    implementation 'io.quarkus:quarkus-rest-client-jackson'
    implementation('org.projectlombok:lombok:1.18.22')
    implementation('com.fasterxml.jackson.core:jackson-databind:2.13.4.1')
    implementation 'javax:javaee-api:8.0'
    implementation 'io.quarkus:quarkus-smallrye-fault-tolerance'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation "org.openapitools:jackson-databind-nullable:0.2.1"
    implementation 'com.google.code.findbugs:jsr305:3.0.0'
    implementation 'io.quarkus:quarkus-config-yaml'
    implementation 'io.quarkus:quarkus-arc'
    annotationProcessor("org.projectlombok:lombok:1.18.22")
}


compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
    dependsOn 'telegramWebhookApi'
    dependsOn 'telegramBotApi'
    dependsOn 'bookingPlatformApi'
}

tasks.register("telegramWebhookApi", GenerateTask) {
    generatorName = 'java'
    library = 'native'
    inputSpec = "${project.rootDir}/src/main/resources/openapi/telegram-webhook-api.yaml"
    outputDir = "${project.buildDir}/generated"
    apiPackage = 'org.crolopez.workplacereservationbot.telegram.infrastructure.handler.telegram'
    modelPackage = 'org.crolopez.workplacereservationbot.telegram.infrastructure.handler.telegram.dto'
    configOptions = [
            dateLibrary: 'java11',
            sourceFolder: 'src/main/java',
            delegatePattern: 'true',
            useBeanValidation: 'true'
    ]
    generateApiTests = false
    generateModelTests = false
    generateApiDocumentation = false
    generateModelDocumentation = false
}

tasks.register("telegramBotApi", GenerateTask) {
    generatorName = 'java'
    library = 'native'
    inputSpec = "${project.rootDir}/src/main/resources/openapi/telegram-bot-api.yaml"
    outputDir = "${project.buildDir}/generated"
    apiPackage = 'org.crolopez.workplacereservationbot.telegram.infrastructure.handler.client'
    modelPackage = 'org.crolopez.workplacereservationbot.telegram.infrastructure.handler.client.dto'
    configOptions = [
            dateLibrary: 'java11',
            sourceFolder: 'src/main/java',
            generateBuilders     : "true",
            interfaceOnly        : "false",
            apiNameSuffix: "TelegramBotApi",
            additionalModelTypeAnnotations: "@lombok.Builder @lombok.AllArgsConstructor @io.quarkus.runtime.annotations.RegisterForReflection",
            useSwaggerAnnotations: "false",
            useTags              : "true",
            useBeanValidation    : "true"
    ]
    generateApiTests = false
    generateModelTests = false
    generateApiDocumentation = false
    generateModelDocumentation = false
}

tasks.register("bookingPlatformApi", GenerateTask) {
    generatorName = 'java'
    library = 'native'
    inputSpec = "${project.rootDir}/src/main/resources/openapi/booking-platform-api.yaml"
    outputDir = "${project.buildDir}/generated"
    apiPackage = 'org.crolopez.workplacereservationbot.booking.infrastructure.repositories.client'
    modelPackage = 'org.crolopez.workplacereservationbot.booking.infrastructure.repositories.client.dto'
    configOptions = [
            dateLibrary: 'java11',
            sourceFolder: 'src/main/java',
            generateBuilders     : "true",
            interfaceOnly        : "false",
            apiNameSuffix: "BookingPlatformApi",
            additionalModelTypeAnnotations: "@lombok.Builder @lombok.AllArgsConstructor @io.quarkus.runtime.annotations.RegisterForReflection",
            useSwaggerAnnotations: "false",
            useTags              : "true",
            useBeanValidation    : "true",
            allParams          : "true"
    ]
    generateApiTests = false
    generateModelTests = false
    generateApiDocumentation = false
    generateModelDocumentation = false
}
